#include <iostream>
#include <iomanip>
#include <string>
#include <Windows.h> // забезпечення відображення кирилиці
using namespace std;
enum Spec { COMP, IT, MATH, PHYSIC, WORK };
enum Curs { FIRST, SECOND, THIRD, FOURTH };
string cursStr[] = { "I", "II", "III", "IV" };
string specStr[] = { "Комп науки", "Інформатика", "Мат та ек", "Фіз та інформ", "Труд навч" };
struct Student
{
	string prizv;
	Curs curs;
	Spec spec;
	struct
	{
		int physic;
		int math;
		int IT;
	};
};
void Create(Student* p, const int N);
void Print(Student* p, const int N);
void Students(Student* p, const int N);
double LineSearch(Student* p, const int N);
int main()
{
	SetConsoleCP(1251); 
	SetConsoleOutputCP(1251); 

	int N;
	cout << "Введіть кількість студентів: "; cin >> N;

	Student* p = new Student[N];
	Create(p, N);
	Print(p, N);
	cout << "Прізвища студентів, які отримали оцінки  4  5: "; Students(p, N); cout <<"," << endl;
	cout << "кількість студентів, чий бал з фізики 5:-- " << LineSearch(p, N) << endl;
	return 0;
}
void Create(Student* p, const int N)
{
	int spec;
	int curs;
	for (int i = 0; i < N; i++)
	{
		cout << "Студент № " << i + 1 << ":" << endl;
		cin.get(); // очищуємо буфер клавіатури – бо залишаються символи
		cin.sync(); // "кінець рядка", які не дають ввести наступний літерний рядок

		cout << " прізвище: "; getline(cin, p[i].prizv);
		cout << " курс (0 - I, 1 - II, 2 - III, 3 - IV): ";
		cin >> curs;
		cout << " спеціальність (0 - Комп’ютерні науки, 1 - Інформатика, 2 - Математика та економіка, 3 - Фізика та інформатика, 4 - Трудове навчання): ";
		cin >> spec;
		cout << " оцінка з фізики : "; cin >> p[i].physic;
		cout << " оцінка з математики : "; cin >> p[i].math;
		cout << " оцінка з інформатики : "; cin >> p[i].IT;
		p[i].spec = (Spec)spec;
		p[i].curs = (Curs)curs;
	}
}
void Print(Student* p, const int N)
{
	cout << "======================================================================================================="
		<< endl;
	cout << "| № | Прізвище | Курс | Спеціальність | Оцінка з фізики | Оцінка з математики | Оцінка з інформатики |"
		<< endl;
	cout << "-------------------------------------------------------------------------------------------------------"
		<< endl;
	for (int i = 0; i < N; i++)
	{
		cout << "| " << setw(2) << i + 1;
		cout << "| " << setw(9) << p[i].prizv;
		cout << "| " << setw(5) << cursStr[p[i].curs];
		cout << "| " << setw(14) << specStr[p[i].spec];
		cout << "| " << setw(16) << p[i].physic;
		cout << "| " << setw(20) << p[i].math;
		cout << "| " << setw(21) << p[i].IT << "|";
		cout << endl;
	}
	cout << "======================================================================================================="
		<< endl;
	cout << endl;
}
void Students(Student* p, const int N)
{
	int k = 0;
	for (int i = 0; i < N; i++)
	{
		if (p[i].spec == COMP || p[i].spec == IT || p[i].spec == MATH || p[i].spec == PHYSIC || p[i].spec == WORK) {
			if (p[i].physic >= 4 && p[i].math >= 4 && p[i].IT >=  4) {
				cout << p[i].prizv;
			}
		}
	}
}
double LineSearch(Student* p, const int N)
{
	int k = 0, n = 0;
	for (int i = 0; i < N; i++)
	{
		if (p[i].spec == COMP || p[i].spec == IT || p[i].spec == MATH || p[i].spec == PHYSIC || p[i].spec == WORK) {
			n++;
			if (p[i].physic > 4) {
				k++;
			}
		}
	}
	return k;
}
